version: '3'

services:
  broker-service:
    image: "blacksound1/broker-service:1.0.1"
    # ports:
    #   - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    
  listener-service:
    image: "blacksound1/listener-service:1.0.0"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    image: "blacksound1/auth-service:1.0.0"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres-service port=5432 user=postgres password=password dbname=postgres sslmode=disable timezone=UTC connect_timeout=5"
    
  logger-service:
    image: "blacksound1/logger-service:1.0.1"
    deploy:
      mode: replicated
      replicas: 1

  front-end-service:
    image: "blacksound1/front-end-service:1.0.2"
    # ports:
    #   - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"
    ports:
      - "8081:8081"

  mail-service:
    image: "blacksound1/mail-service:1.0.0"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog-service
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROM_NAME: "Jimmy Bimmy"
      MAIL_FROM_ADDRESS: "jimmy.bimmy@test.com"

  micro-caddy:
    image: "blacksound1/micro-caddy:1.0.0"
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  rabbitmq-service:
    image: 'rabbitmq:3.9-alpine'
    deploy:
      mode: global

  mailhog-service:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo-service:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/var/lib/mongodb/data/

  postgres-service:
    image: 'postgres:17'
    ports:
      - "5433:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/


volumes:
  caddy_data:
    external: true
  caddy_config:
  